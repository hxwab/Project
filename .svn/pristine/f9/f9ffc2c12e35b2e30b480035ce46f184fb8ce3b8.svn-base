package csdc.action.product;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import csdc.action.BaseAction;

public class FinalAuditAction extends BaseAction {
	

	/**
	 * 
	 */
	private static final long serialVersionUID = -7118166128512170277L;
	
	
	
	private  static final String HQL = "select p.id,p.number,p.name,p.authorName,p.agencyName,p.researchType,p.updateDate,r.year,r.level,r.type from Product p left join p.reward r where 1=1 ";
	private static final String[] COLUMN = {
		"p.id",
		"p.number",
		"p.name",
		"p.author",
		"p.agencyName",
		"p.researchType",
		"p.updateDate",
		"r.year",
		"r.level",
		"r.type"
	};// 用于拼接的排序列
	
	private static final String PAGE_NAME = "finalAuditPage";// 列表页面名称
	private static final String DATE_FORMAT = "yyyy-MM-dd";// 列表时间格式
	private static final String PAGE_BUFFER_ID = "p.id";// 上下条查看时用于查找缓存的字段
	
	

	@Override
	public String toAdd() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String add() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String delete() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String toModify() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String modify() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String view() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String toView() {
		return SUCCESS;
	}

	@Override
	public Object[] simpleSearchCondition() {
		
		int currentYear = new Date().getYear();
		
		keyword = (keyword == null) ? "" : keyword.toLowerCase().trim();// 预处理关键字
		StringBuffer hql = new StringBuffer();
		Map map = new HashMap();
		hql.append(HQL);
		if (keyword != null && !keyword.isEmpty()) {
			if (searchType == 1) {
				hql.append("and LOWER(p.agencyName) like :keyword");
				map.put("keyword", "%" + keyword + "%");
			} else if (searchType == 2) {
				hql.append("and LOWER(p.researchType) like :keyword");
				map.put("keyword", "%" + keyword + "%");
			} else if (searchType == 3) {
				hql.append("(LOWER(r.level) like :keyword ");
				map.put("and keyword", "%" + keyword + "%");
			}
		}
		//默认为当前年份
		keyword = searchType==4 ? keyword :Integer.toString(currentYear);
		hql.append("and r.year = :keyword ");
		map.put("keyword", keyword);
		
		// 调用初级检索功能
		return new Object[]{
			hql.toString(),
			map,
			0,
			null
		};
		
		
	}

	@Override
	public Object[] advSearchCondition() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String pageName() {
		return PAGE_NAME;
	}

	@Override
	public String pageBufferId() {
		return PAGE_BUFFER_ID;
	}

	@Override
	public String[] sortColumn() {
		return COLUMN;
	}

	@Override
	public String dateFormat() {
		return DATE_FORMAT;
	}

}
